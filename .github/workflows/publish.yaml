name: Publish to PyPI

on:
  push:
    tags:
      - "v*.*.*"  # Trigger on version tags like v1.0.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9.13

      - name: Install dependencies
        id: install-dependencies
        run: |
          sudo apt-get update && sudo apt-get install gcc build-essential libsasl2-dev -y
          python -m pip install --upgrade pip
          pip install pip-tools build twine

      - name: Validate version matches tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          SETUP_VERSION=$(python setup.py --version)
          echo "Tag version: $TAG_VERSION"
          echo "Setup.py version: $SETUP_VERSION"
          if [ "$TAG_VERSION" != "$SETUP_VERSION" ]; then
            echo "Version mismatch: setup.py ($SETUP_VERSION) != tag ($TAG_VERSION)"
            exit 1
          fi

      - name: Clean up previous builds
        id: clean-build
        run: |
          rm -rf build/* *.egg-info .pytest_cache dist build
          find . -name "*.pyc" -delete

      - name: Install python dependencies
        id: install-py-dependencies
        run: |
          pip-sync requirements.txt requirements-dev.txt

      - name: Run tests
        run: |
          export PYTHONPATH="${PWD}/airflow_spark_on_k8s_job_builder:$PYTHONPATH"
          pytest

      - name: Build the package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
